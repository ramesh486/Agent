name: Encrypt Secret Data
on:
  repository_dispatch:
    types: [encrypt_secret]

jobs:
  encrypt:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pynacl

      - name: Encrypt Values
        id: encrypt
        run: |
          python -c '
          import json
          import sys
          from base64 import b64decode, b64encode
          from nacl import encoding, public
          
          def encrypt(public_key: str, secret_value: str) -> str:
              """Encrypt a string using the provided public key."""
              public_key = public.PublicKey(b64decode(public_key), encoding.Base64Encoder)
              sealed_box = public.SealedBox(public_key)
              encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
              return b64encode(encrypted).decode("utf-8")
          
          # Get the input data
          data = """${{ toJSON(github.event.client_payload) }}"""
          payload = json.loads(data)
          
          # Get the public key
          public_key = payload["public_key"]
          
          # Encrypt single value if provided
          if "value_to_encrypt" in payload:
              result = encrypt(public_key, payload["value_to_encrypt"])
              print(f"::set-output name=encrypted_value::{result}")
          
          # Encrypt multiple fields if provided
          if "data" in payload:
              encrypted_data = {}
              for key, value in payload["data"].items():
                  encrypted_data[key] = encrypt(public_key, str(value))
              print(f"::set-output name=encrypted_data::{json.dumps(encrypted_data)}")
          '

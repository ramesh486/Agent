name: Encrypt with Repository Key
on:
  repository_dispatch:
    types: [encrypt_secret]

jobs:
  encrypt-with-repo-key:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pynacl

      - name: Encrypt Data
        env:
          PUBLIC_KEY: ${{ github.event.client_payload.public_key }}
        run: |
          python -c '
          import json
          import os
          from base64 import b64decode, b64encode
          from nacl import encoding, public
          
          def encrypt(public_key: str, secret_value: str) -> str:
              """Encrypt a value using the repository public key"""
              public_key = public.PublicKey(b64decode(public_key), encoding.Base64Encoder)
              sealed_box = public.SealedBox(public_key)
              encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
              return b64encode(encrypted).decode("utf-8")
          
          # Get input data and public key
          payload = """${{ toJSON(github.event.client_payload.data) }}"""
          data = json.loads(payload)
          repo_public_key = os.environ["PUBLIC_KEY"]
          
          # Encrypt each field
          encrypted_data = {}
          for field, value in data.items():
              if value:
                  encrypted_data[field] = encrypt(repo_public_key, value)
          
          # Save results
          with open("encrypted_values.json", "w") as f:
              json.dump(encrypted_data, f, indent=2)
          
          print("Encryption completed with repository public key")
          '

      - name: Upload encrypted data
        uses: actions/upload-artifact@v3
        with:
          name: encrypted-values
          path: encrypted_values.json
